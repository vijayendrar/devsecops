---
- hosts: all
  become: True
  tasks:
    - name: configure the hostname for the node1
      hostname:
        name: k8-node1
        
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - containerd


    - name: configuring pre-requsite
      shell : |
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF

        sudo modprobe overlay
        sudo modprobe br_netfilter

        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1
        EOF
        sudo sysctl --system
        exit 0    

    - name: create directory for conatinerd configuration 
      file: 
        path: /etc/containerd
        state: directory

    - name: run the shell command and create the file 
      shell: |
        containerd config default | sudo tee /etc/containerd/config.toml
        exit 0

    - name: remove the line in file
      lineinfile:
        path: /etc/containerd/config.toml
        state: present
        regexp: '            SystemdCgroup = false'
        line: '            SystemdCgroup = True'


    - name: download the apt key
      get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /usr/share/keyrings/kubernetes-archive-keyring.gpg

    - name: Install Apt Key from File
      apt_key:        
        file: /usr/share/keyrings/kubernetes-archive-keyring.gpg
        state: present

    - name: Kubernetes Apt Repository
      apt_repository:
        repo: deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes       
        update_cache: true


    - name: install kubelet kubadm and kubectl on master node
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - kubelet
        - kubeadm 
        - kubectl
      

    - name: Remove swap
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0


    - name: Copy the join command to server location
      copy: src=join-command dest=/tmp/join-command.sh mode=0777
      

    - name: Join the node to cluster
      command: sh /tmp/join-command.sh    